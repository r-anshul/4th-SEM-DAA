#include<iostream>
#include<vector>
#include<climits>
using namespace std;

int fmin(vector<int> d,vector<bool> v,int n)
{
    int m=INT_MAX,idx=-1;
    for(int i=0;i<n;i++)
    {
        if(d[i]<m&&!v[i])
        {
            m=d[i];
            idx=i;
        }
    }
    return idx;
}

void prims(vector<vector<int> > &g,int n)
{
    vector<bool> v(n,false);
    vector<int> d(n,INT_MAX);
    vector<int> p(n,-1);
    d[0]=0;
    for(int i=0;i<n-1;i++)
    {
        int u=fmin(d,v,n);
        v[u]=true;
        for(int j=0;j<n;j++)
        {
            if(g[u][j]!=0&&!v[j]&&g[u][j]<d[j])
            {
                d[j]=g[u][j];
                p[j]=u;
            }
        }
    }
    int cost=0;
	for(int i=1;i<n;i++)
		cost+=g[i][p[i]];
	cout<<"Total minimum cost - "<<cost<<endl;
}

int main()
{
    int n;
    cout<<"Enter the number of vertices - ";
    cin>>n;
    vector<vector<int> > g(n,vector<int>(n,0));
    cout<<"Enter the adjacency matrix (use 0 for no edge) -\n";
    for(int i=0;i<n;i++)
        for(int j=0;j<n;j++)
            cin>>g[i][j];
    prims(g,n);
    return 0;
}
